# Kollagen‑VI Muskeldystrophie Notfallpass - Projektanforderungen

## Ziel und Rahmen
Diese Seite stellt Notfallinformationen für das Krankheitsbild Kollagen‑VI‑Muskeldystrophie bereit. Sie wird über GitHub Pages gehostet und per QR‑Code auf einem Sticker verlinkt. Der Auftritt muss sehr simpel, robust, schnell und ohne externe Abhängigkeiten funktionieren.
Es werden keinerlei personenbezogene Daten gehostet oder verarbeitet. Die Seite enthält ausschließlich statische, allgemeine Informationen.

## Inhalte der Notfallseite (fachlich)
- **Krankheitsüberblick**: Kurzbeschreibung der Kollagen‑VI‑Muskeldystrophie und typische Risiken im Notfall
- **Allgemeine Akutmaßnahmen**: Priorisierte, nicht patientenspezifische Handlungsempfehlungen (Checkliste)
- **Kontraindikationen**: Allgemein zu vermeidende Maßnahmen/Medikamente mit kurzer Begründung
- **Hinweise für Rettungsdienst/Notaufnahme**: Allgemeine Versorgungshinweise, Monitoring, Transport
- **Hinweise für Anästhesie/Intensivmedizin**: Relevante, allgemeine Vorsichtsmaßnahmen (falls zutreffend)
- **Referenzen/Leitlinien**: Verweise auf öffentlich zugängliche Ressourcen; keine individuellen Dokumente
- **Mehrsprachigkeit**: Vollständige Inhalte auf Deutsch und Englisch

## Aktuelle Projektstruktur

### Hauptdateien
- **index.md**: Startseite mit Sprachauswahl (Deutsch/English)
- **german.md**: Vollständige Notfallinformationen auf Deutsch
- **english.md**: Complete emergency information in English
- **about.md**: Projektinformationen und "Über das Projekt"

### Layout und Assets
- **_layouts/default.html**: Hauptlayout mit Bootstrap Navbar und Footer
- **assets/css/custom.scss**: Eigenes Styling für Sprachkarten und Layout
- **assets/images/**: Flaggen-Bilder für Sprachauswahl
- **_config.yml**: Jekyll-Konfiguration mit Just the Docs Theme

### Technische Umsetzung
- **Jekyll 4.4.1** mit kramdown Markdown-Parser
- **Bootstrap 5** über CDN für responsives Design
- **Bootstrap Icons** für UI-Elemente
- **Just the Docs Theme** als Basis
- **Pretty URLs** (permalink: pretty) für saubere URLs
- **Git-Versionierung** mit .gitignore für generierte Dateien

## Design- und Technikvorgaben

### Barrierefreiheit
- Semantisches HTML
- Ausreichender Kontrast (mind. WCAG AA)
- Sichtbarer Fokus, Skip‑Link
- Tastaturnavigation
- Responsive Design

### Performance
- Schnelle Ladezeit
- CDN für Bootstrap und Icons
- Keine externen Tracker
- Keine Webfonts (oder lokal eingebunden)
- Optimierte Bilder

### Robustheit
- Seite funktioniert auch ohne JavaScript
- Progressive Enhancement
- Kein Client‑State notwendig
- Statische Inhalte

### Responsiv
- Mobile‑first Design
- Große, klar beschriftete Buttons (min. 44×44 px)
- Burger-Menü für mobile Navigation
- Touch-optimiert

### Druck
- Eigene Druckansicht (A4 optimiert)
- Gut lesbar
- "Seite drucken"‑Button auf allen Inhaltsseiten
- Print-CSS für optimale Darstellung

### Datenschutz
- Keine Cookies/Tracking
- Keine personenbezogenen Daten im Repository
- Keine Formulare/Uploads
- Ausschließlich allgemeine Inhalte

## Navigation und Layout

### Header-Navigation
- Bootstrap Navbar mit responsive Design
- Burger-Menü für mobile Geräte
- Links: Startseite, Deutsch, English, Über das Projekt
- Brand mit Herz-Puls-Icon

### Footer
- Version und Datenschutz-Hinweis
- GitHub-Link
- Responsive Layout

### Sprachauswahl
- Karten-basiertes Design
- Flaggen-Icons für visuelle Orientierung
- Hover-Effekte und Animationen
- Vollständige Breite auf mobilen Geräten

## Akzeptanzkriterien
- ✅ Alle Navigationslinks funktionieren konsistent auf allen Seiten
- ✅ Inhalte sind vollständig in Deutsch und Englisch vorhanden
- ✅ Seite rendert ohne JavaScript korrekt und ist per Tastatur bedienbar
- ✅ Druckversion ist übersichtlich und vollständig
- ✅ Responsive Design funktioniert auf allen Geräten
- ✅ Keine externen Netzwerkanfragen außer zu CDN-Ressourcen
- ✅ Es sind keinerlei personenbezogene Daten enthalten
- ✅ Jekyll‑Build rendert lokal/auf GitHub Pages korrekt
- ✅ Markdown-Dateien werden korrekt in HTML umgewandelt

## Deployment
- **GitHub Pages** für Hosting
- **Automatische Builds** bei Push auf main Branch
- **Base URL** konfiguriert für Repository-Name
- **Custom Domain** möglich (falls gewünscht)

## Wartung und Updates
- **Versionierung** über Git
- **Issues** für Bug-Reports
- **Pull Requests** für Verbesserungen
- **Regelmäßige Updates** der medizinischen Inhalte
- **Lighthouse-Tests** für Performance-Monitoring

 